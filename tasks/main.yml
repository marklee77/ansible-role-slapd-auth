---
- name: configure ldap domain through debconf
  debconf:
    name: slapd
    question: slapd/domain
    vtype: string
    value: "{{ slapd_domain }}"

- name: ensure ldap server packages are installed
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - ldap-utils
    - ldapscripts
    - slapd
    - ssl-cert

# FIXME: dpkg seems broken
#- name: enforce desired slapd package configuration
#  dpkg_reconfigure:
#    pkg: slapd
#    answers:
#      slapd/domain: "{{ slapd_domain }}"

- name: create self-signed key/certificate pair if required
  shell: >
          openssl req -newkey rsa:2048 -x509 -nodes 
          -days 365 -subj "/CN={{ slapd_ssl_hostname }}"
          -out {{ slapd_ssl_cert_file }}
          -keyout {{ slapd_ssl_key_file }} &&
          update-ca-certificates 
          creates={{ slapd_ssl_cert_file }}

- name: ensure openldap user exists and is a member of the ssl-cert group
  user:
    name: openldap
    append: yes
    groups: ssl-cert
    state: present
  notify:
    - restart slapd

- name: configure slapd services in /etc/default/slapd
  lineinfile:
    dest: /etc/default/slapd
    regexp: '^SLAPD_SERVICES='
    line: 'SLAPD_SERVICES="{{ slapd_services }}"'
  notify:
    - restart slapd

- name: ensure slapd is started and enabled
  service:
    name: slapd
    state: started
    enabled: yes

- name: configure root password for default database
  ldap:
    entry_dn: olcDatabase={1}hdb,cn=config
    attributes:
      - olcRootPW: "{{ slapd_admin_password|ssha_password_hash(slapd_admin_password_salt) }}"
    modify_action: replace
    state: present

- name: ensure ssl is configured in ldap if certificates are available
  ldap:
    entry_dn: cn=config
    attributes:
      - olcTLSCipherSuite: "{{ slapd_ssl_cipher_suite }}"
      - olcTLSCACertificateFile: "{{ slapd_ssl_ca_cert_file }}"
      - olcTLSCertificateFile: "{{ slapd_ssl_cert_file }}"
      - olcTLSCertificateKeyFile: "{{ slapd_ssl_key_file }}"
    state: present
  notify:
    - restart slapd
  when: slapd_enable_ssl

- name: ensure ssl is not configured in ldap if certificates are not available
  ldap:
    entry_dn: cn=config
    attributes:
      - olcTLSCipherSuite
      - olcTLSCACertificateFile
      - olcTLSCertificateFile
      - olcTLSCertificateKeyFile
    modify_action: delete
    state: present
  notify:
    - restart slapd
  when: not slapd_enable_ssl

- name: ensure ldap requires ssl if desired
  ldap:
    entry_dn: cn=config
    attributes:
      - olcLocalSSF: 128
      - olcSecurity: ssf=128
    state: present
  when: slapd_require_ssl

- name: ensure that anonymous binds are not allowed
  ldap:
    entry_dn: cn=config
    attributes:
      - olcDisallows: bind_anon
      - olcRequires: authc
    state: present

- name: ensure membership overlay module is loaded
  ldap:
    entry_dn: cn=module,cn=config
    search_base: cn=config
    search_filter: '(olcModuleLoad~=memberof.la)'
    strip_braces: yes
    attributes:
      - cn: module
      - objectClass: olcModuleList
      - olcModuleLoad: memberof.la
      - olcModulePath: /usr/lib/ldap
    state: present
  notify:
    - restart slapd

- name: ensure membership overlay is properly configured
  ldap:
    entry_dn: olcOverlay={0}memberof,olcDatabase={1}hdb,cn=config
    attributes:
      - objectClass: olcConfig
      - objectClass: olcMemberOf
      - objectClass: olcOverlayConfig
      - olcOverlay: memberof
    state: present

- name: ensure refint overlay module is loaded
  ldap:
    entry_dn: cn=module,cn=config
    search_base: cn=config
    search_filter: '(olcModuleLoad~=refint.la)'
    strip_braces: yes
    attributes:
      - cn: module
      - objectClass: olcModuleList
      - olcModuleLoad: refint.la
      - olcModulePath: /usr/lib/ldap
    state: present
  notify:
    - restart slapd

- name: ensure refint overlay is properly configured
  ldap:
    entry_dn: olcOverlay={1}refint,olcDatabase={1}hdb,cn=config
    attributes:
      - objectClass: olcConfig
      - objectClass: olcOverlayConfig
      - objectClass: olcRefintConfig
      - olcOverlay: '{1}refint'
      - olcRefintAttribute: memberof member manager owner 
    state: present

- name: ensure unique overlay module is loaded
  ldap:
    entry_dn: cn=module,cn=config
    search_base: cn=config
    search_filter: '(olcModuleLoad~=unique.la)'
    strip_braces: yes
    attributes:
      - cn: module
      - objectClass: olcModuleList
      - olcModuleLoad: unique.la
      - olcModulePath: /usr/lib/ldap
    state: present
  notify:
    - restart slapd

- name: ensure unique overlay is properly configured
  ldap:
    entry_dn: olcOverlay={2}unique,olcDatabase={1}hdb,cn=config
    attributes:
      - objectClass: olcConfig
      - objectClass: olcOverlayConfig
      - objectClass: olcUniqueConfig
      - olcOverlay: '{2}unique'
      - olcUniqueURI: ldap:///?uid,uidNumber,mail?sub
    state: present
  notify:
    - restart slapd
  
- name: ensure users cannot edit attributes that would result in privilege escalation
  ldap:
    entry_dn: olcDatabase={1}hdb,cn=config
    attributes:
      - olcAccess: '{0}to attrs=cn,uid,uidNumber,gidNumber,homeDirectory by dn="cn=admin,{{ slapd_base_dn }}" write by * read'
    modify_action: add
    state: present

- name: ensure indexes are configured
  ldap:
    entry_dn: olcDatabase={1}hdb,cn=config
    attributes:
      - olcDbIndex: uid,uidNumber,gidNumber eq,pres
    modify_action: add
    state: present

- name: ensure expected organizational units are present in ldap
  ldap:
    bind_dn: cn=admin,{{ slapd_base_dn }}
    bind_password: "{{ slapd_admin_password }}" 
    entry_dn: ou={{ item }},{{ slapd_base_dn }}
    attributes:
      - objectClass: organizationalUnit
      - ou: "{{ item }}"
    state: present
  with_items:
    - users
    - groups
    - services
    - machines

- name: update /etc/ldapscripts configuration from templates
  template:
    src: etc/ldapscripts/{{ item }}
    dest: /etc/ldapscripts/{{ item }}
    owner: root
    group: root
    mode: 0644
  with_items:
    - ldapscripts.conf
    - ldapadduser.template
    - ldapaddgroup.template
    - ldapaddmachine.template

- name: update /etc/ldapscripts/ldapscripts.passwd from template
  template:
    src: etc/ldapscripts/ldapscripts.passwd
    dest: /etc/ldapscripts/ldapscripts.passwd
    owner: root
    group: root
    mode: 0600

