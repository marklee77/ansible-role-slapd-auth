---
- name: configure ldap domain
  debconf:
    name: slapd
    question: slapd/domain
    vtype: string
    value: "{{ ldap_domain }}"

- name: configure ldap organization
  debconf:
    name: slapd
    question: shared/organization
    vtype: string
    value: "{{ ldap_domain }}"

# cannot retrieve original value and will not change password without force, so
# report no change.
- name: configure ldap passwd 1
  debconf:
    name: slapd
    question: slapd/password1
    vtype: password
    value: "{{ ldap_admin_password }}"
  changed_when: false

# cannot retrieve original value and will not change password without force, so
# report no change.
- name: configure ldap passwd 2
  debconf:
    name: slapd
    question: slapd/password2
    vtype: password
    value: "{{ ldap_admin_password }}"
  changed_when: false

- name: ensure required base packages are present
  apt: 
    pkg: "{{ item }}" 
    state: latest 
    update_cache: yes 
    cache_valid_time: 600
  with_items:
    - ldap-utils
    - ldapscripts
    - slapd
    - ssl-cert

# FIXME: dpkg seems broken
#- name: enforce desired slapd package configuration
#  dpkg_reconfigure:
#    pkg: slapd
#    answers:
#      slapd/domain: "{{ ldap_domain }}"
#      shared/organization: "{{ ldap_domain }}"
#      slapd/password1: "{{ ldap_admin_password }}"
#      slapd/password2: "{{ ldap_admin_password }}"

# FIXME: just set lineinfile...
#- name: update /etc/default/slapd from template
#  template:
#    src: etc/default/slapd
#    dest: /etc/default/slapd
#    owner: root
#    group: root
#    mode: 0644
#  notify:
#    - restart slapd

- name: enforce slapd services
  lineinfile:
    dest: /etc/default/slapd
    regexp: '^SLAPD_SERVICES='
    line: 'SLAPD_SERVICES="{{ slapd_services }}"'
  notify:
    - restart slapd
 

- name: ensure slapd is started and enabled
  service:
    name: slapd
    state: started
    enabled: yes
    
#- olcTLSCipherSuite: "{{ slapd_ssl_cipher_suite }}"
- name: ensure ssl is configured if certificates are configured
  ldap:
    entry_dn: cn=config
    replace_attributes:
      - olcTLSCACertificateFile: "{{ slapd_ssl_ca_cert_file }}"
      - olcTLSCertificateFile: "{{ slapd_ssl_cert_file }}"
      - olcTLSCertificateKeyFile: "{{ slapd_ssl_key_file }}"
    state: present
  notify:
    - restart slapd
  when: slapd_ssl_cert_file != "" and slapd_ssl_key_file != ""

- name: ensure ssl is not configured if certificates are not configured
  ldap:
    entry_dn: cn=config
    delete_attributes:
      - olcTLSCipherSuite
      - olcTLSCACertificateFile
      - olcTLSCertificateFile
      - olcTLSCertificateKeyFile
    state: present
  notify:
    - restart slapd
  when: slapd_ssl_cert_file == "" or slapd_ssl_key_file == ""

- name: enforce secure connections
  ldap:
    entry_dn: cn=config
    replace_attributes:
      - olcLocalSSF: 256 
      - olcSecurity: ssf=256 update_tls=256
    state: present
  notify:
    - restart slapd
  when: ldap_require_ssl

- name: ensure expected organizational units are present
  ldap:
    bind_dn: cn=admin,{{ ldap_base_dn }}
    bind_password: "{{ ldap_admin_password }}" 
    entry_dn: ou={{ item }},{{ ldap_base_dn }}
    add_attributes:
      - objectClass: organizationalUnit
      - ou: "{{ item }}"
    state: present
  with_items:
    - Users
    - Groups
    - Machines

- name: update /etc/ldapscripts/ldapscripts.conf from template
  template:
    src: etc/ldapscripts/ldapscripts.conf
    dest: /etc/ldapscripts/ldapscripts.conf
    owner: root
    group: root
    mode: 0644

- name: update /etc/ldapscripts/ldapscripts.passwd from template
  template:
    src: etc/ldapscripts/ldapscripts.passwd
    dest: /etc/ldapscripts/ldapscripts.passwd
    owner: root
    group: root
    mode: 0600

